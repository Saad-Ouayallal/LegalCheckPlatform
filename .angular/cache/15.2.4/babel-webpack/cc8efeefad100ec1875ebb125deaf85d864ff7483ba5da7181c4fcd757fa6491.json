{"ast":null,"code":"import { Answers } from '../quiz.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../questions.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/card\";\nimport * as i6 from \"../question-form/question-form.component\";\nfunction CardSelectionComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 3);\n  }\n}\nfunction CardSelectionComponent_div_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"app-question-form\", 7);\n    i0.ɵɵlistener(\"onChoiceMade\", function CardSelectionComponent_div_2_div_1_Template_app_question_form_onChoiceMade_1_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r3.updateChoice($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"mat-card-actions\", 8)(3, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function CardSelectionComponent_div_2_div_1_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.nextOrViewResults());\n    });\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"question\", ctx_r2.questions[ctx_r2.currentQuestionIndex]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !ctx_r2.answers.values[ctx_r2.currentQuestionIndex]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.currentQuestionIndex === ctx_r2.questions.length - 1 ? \"Enter the measurments\" : \"Next\", \" \");\n  }\n}\nfunction CardSelectionComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtemplate(1, CardSelectionComponent_div_2_div_1_Template, 5, 3, \"div\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.showResults);\n  }\n}\nexport class CardSelectionComponent {\n  // inject both the active route and the questions service\n  constructor(route, questionsService) {\n    this.route = route;\n    this.questionsService = questionsService;\n    this.showResults = false;\n  }\n  ngOnInit() {\n    //read from the dynamic route and load the proper quiz data\n    this.questionsService.getQuestions('questions').subscribe(questions => {\n      this.questions = questions;\n      this.answers = new Answers();\n      this.currentQuestionIndex = 0;\n    });\n  }\n  updateChoice(choice) {\n    this.answers.values[this.currentQuestionIndex] = choice;\n  }\n  nextOrViewResults() {\n    if (this.currentQuestionIndex === this.questions.length - 1) {\n      console.log(this.answers);\n      this.showResults = true;\n      return;\n    }\n    this.currentQuestionIndex++;\n  }\n}\nCardSelectionComponent.ɵfac = function CardSelectionComponent_Factory(t) {\n  return new (t || CardSelectionComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.QuestionsService));\n};\nCardSelectionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CardSelectionComponent,\n  selectors: [[\"app-card-selection\"]],\n  decls: 3,\n  vars: 2,\n  consts: [[1, \"question-container\"], [\"class\", \"spinner-grow text primary\", 4, \"ngIf\"], [\"class\", \"quiz\", 4, \"ngIf\"], [1, \"spinner-grow\", \"text\", \"primary\"], [1, \"quiz\"], [\"class\", \"questions\", 4, \"ngIf\"], [1, \"questions\"], [3, \"question\", \"onChoiceMade\"], [1, \"button-parent\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 1, \"btn\", \"btn-success\", 3, \"disabled\", \"click\"]],\n  template: function CardSelectionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-card\", 0);\n      i0.ɵɵtemplate(1, CardSelectionComponent_div_1_Template, 1, 0, \"div\", 1);\n      i0.ɵɵtemplate(2, CardSelectionComponent_div_2_Template, 2, 1, \"div\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.quiz && !ctx.questions);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.questions);\n    }\n  },\n  dependencies: [i3.NgIf, i4.MatButton, i5.MatCard, i5.MatCardActions, i6.QuestionFormComponent],\n  styles: [\".question-container[_ngcontent-%COMP%] {\\n  max-width: 1200px;\\n  margin: 200px auto;\\n  display: flex;\\n  justify-content: center;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  font-size: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY2FyZC1zZWxlY3Rpb24vY2FyZC1zZWxlY3Rpb24uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDUSxpQkFBQTtFQUNBLGtCQUFBO0VBQ0EsYUFBQTtFQUNKLHVCQUFBO0FBQ0o7O0FBR0E7RUFDSSxlQUFBO0FBQUoiLCJzb3VyY2VzQ29udGVudCI6WyIucXVlc3Rpb24tY29udGFpbmVyIHtcclxuICAgICAgICBtYXgtd2lkdGg6IDEyMDBweDtcclxuICAgICAgICBtYXJnaW46IDIwMHB4IGF1dG87XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuXHRcdFx0XHRqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuXHJcbn1cclxuXHJcbmJ1dHRvbiB7XHJcblx0XHRcdFx0Zm9udC1zaXplOiAyMHB4O1xyXG4gICAgXHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAIA,SAAeA,OAAO,QAA0B,eAAe;;;;;;;;;;ICF7DC,yBACM;;;;;;IAEJA,8BAA4C;IACsBA;MAAAA;MAAA;MAAA,OAAgBA,0CAAoB;IAAA,EAAC;IACrGA,iBAAoB;IACpBA,2CAAwC;IAC4BA;MAAAA;MAAA;MAAA,OAASA,yCAAmB;IAAA,EAAC;IAE7FA,YACF;IAAAA,iBAAS;;;;IANQA,eAA4C;IAA5CA,wEAA4C;IAI3DA,eAAkD;IAAlDA,8EAAkD;IAClDA,eACF;IADEA,+HACF;;;;;IARNA,8BAAoC;IAClCA,6EAUM;IACRA,iBAAM;;;;IAXEA,eAAkB;IAAlBA,0CAAkB;;;ADQ5B,OAAM,MAAOC,sBAAsB;EASjC;EACAC,YACUC,KAAqB,EACrBC,gBAAkC;IADlC,UAAK,GAALD,KAAK;IACL,qBAAgB,GAAhBC,gBAAgB;IAJ1B,gBAAW,GAAG,KAAK;EAKhB;EAEHC,QAAQ;IACN;IACA,IAAI,CAACD,gBAAgB,CAClBE,YAAY,CAAC,WAAW,CAAC,CACzBC,SAAS,CAAEC,SAAS,IAAI;MACvB,IAAI,CAACA,SAAS,GAAGA,SAAS;MAC1B,IAAI,CAACC,OAAO,GAAG,IAAIV,OAAO,EAAE;MAC5B,IAAI,CAACW,oBAAoB,GAAG,CAAC;IAC/B,CAAC,CAAC;EACN;EAEAC,YAAY,CAACC,MAAW;IACtB,IAAI,CAACH,OAAO,CAACI,MAAM,CAAC,IAAI,CAACH,oBAAoB,CAAC,GAAGE,MAAM;EACzD;EAEAE,iBAAiB;IACf,IAAI,IAAI,CAACJ,oBAAoB,KAAK,IAAI,CAACF,SAAS,CAACO,MAAM,GAAG,CAAC,EAAE;MAC3DC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACR,OAAO,CAAC;MACzB,IAAI,CAACS,WAAW,GAAG,IAAI;MACvB;;IAEF,IAAI,CAACR,oBAAoB,EAAE;EAC7B;;;mBArCWT,sBAAsB;AAAA;;QAAtBA,sBAAsB;EAAAkB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZnCvB,mCAAqC;MACnCA,uEACM;MACNA,uEAYM;MAERA,iBAAW;;;MAhBHA,eAAwB;MAAxBA,iDAAwB;MAExBA,eAAe;MAAfA,oCAAe","names":["Answers","i0","CardSelectionComponent","constructor","route","questionsService","ngOnInit","getQuestions","subscribe","questions","answers","currentQuestionIndex","updateChoice","choice","values","nextOrViewResults","length","console","log","showResults","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\projects\\hajar\\hajar\\src\\app\\card-selection\\card-selection.component.ts","D:\\projects\\hajar\\hajar\\src\\app\\card-selection\\card-selection.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { switchMap } from 'rxjs/operators';\nimport { QuestionsService } from '../questions.service';\nimport { Quiz, Answers, Choice, Question } from '../quiz.model';\n\n\n\n@Component({\n  selector: 'app-card-selection',\n  templateUrl: './card-selection.component.html',\n  styleUrls: ['./card-selection.component.scss'],\n})\nexport class CardSelectionComponent implements OnInit {\n\n\n  quiz!: Quiz;\n  answers!: Answers;\n  questions!: Question[];\n  currentQuestionIndex!: number;\n\n  showResults = false;\n  // inject both the active route and the questions service\n  constructor(\n    private route: ActivatedRoute,\n    private questionsService: QuestionsService\n  ) {}\n\n  ngOnInit() {\n    //read from the dynamic route and load the proper quiz data\n    this.questionsService\n      .getQuestions('questions')\n      .subscribe((questions) => {\n        this.questions = questions;\n        this.answers = new Answers();\n        this.currentQuestionIndex = 0;\n      });\n  }\n\n  updateChoice(choice: any) {\n    this.answers.values[this.currentQuestionIndex] = choice;\n  }\n\n  nextOrViewResults() {\n    if (this.currentQuestionIndex === this.questions.length - 1) {\n      console.log(this.answers)\n      this.showResults = true;\n      return;\n    }\n    this.currentQuestionIndex++;\n  }\n\n}\n","\n<mat-card class=\"question-container\">\n  <div *ngIf=\"quiz && !questions\" class=\"spinner-grow text primary\">\n  </div>\n  <div *ngIf=\"questions\" class=\"quiz\">\n    <div *ngIf=\"!showResults\" class=\"questions\">\n      <app-question-form [question]=\"questions[currentQuestionIndex]\" (onChoiceMade)=\"updateChoice($event)\">\n      </app-question-form>\n      <mat-card-actions class=\"button-parent\">\n        <button mat-raised-button class=\"btn btn-success\" color=\"primary\" (click)=\"nextOrViewResults()\"\n          [disabled]=\"!answers.values[currentQuestionIndex]\">\n          {{currentQuestionIndex === questions.length -1 ? 'Enter the measurments' : 'Next'}}\n        </button>\n      </mat-card-actions>\n\n    </div>\n  </div>\n\n</mat-card>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}