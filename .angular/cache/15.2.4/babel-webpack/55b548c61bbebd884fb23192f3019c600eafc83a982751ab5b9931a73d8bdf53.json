{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/card\";\nfunction InputFormComponent_label_4_label_1_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1, \" Max required number is \");\n    i0.ɵɵelement(2, \"strong\");\n    i0.ɵɵtext(3, \". \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InputFormComponent_label_4_label_1_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1, \" Min required number is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \". \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const control_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(control_r3.validators.min);\n  }\n}\nfunction InputFormComponent_label_4_label_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\")(1, \"li\")(2, \"span\", 5)(3, \"label\", 6);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"label\", 7);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"input\", 8);\n    i0.ɵɵelementStart(8, \"div\", 9)(9, \"button\", 10)(10, \"span\", 11);\n    i0.ɵɵtext(11, \"\\u00D7\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"strong\");\n    i0.ɵɵtext(13, \"Oh snap!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \" Change a few things up and try submitting again.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(15, InputFormComponent_label_4_label_1_div_15_Template, 4, 0, \"div\", 12);\n    i0.ɵɵtemplate(16, InputFormComponent_label_4_label_1_div_16_Template, 5, 1, \"div\", 13);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const control_r3 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(control_r3.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(control_r3.description);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", control_r3.type)(\"formControlName\", control_r3.name)(\"value\", control_r3.value);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.myForm.controls[control_r3.name].hasError(\"max\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.myForm.controls[control_r3.name].hasError(\"min\"));\n  }\n}\nfunction InputFormComponent_label_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\");\n    i0.ɵɵtemplate(1, InputFormComponent_label_4_label_1_Template, 17, 7, \"label\", 3);\n    i0.ɵɵelementStart(2, \"button\", 4);\n    i0.ɵɵtext(3, \"Submit\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const type_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", type_r1.values);\n  }\n}\nexport class InputFormComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.myForm = this.fb.group({});\n  }\n  ngOnChanges(changes) {\n    this.createForm(this.jsonFormData.types);\n  }\n  createForm(types) {\n    for (const type of types) {\n      for (const control of type.values) {\n        const validatorsToAdd = [];\n        for (const [key, value] of Object.entries(control.validators)) {\n          switch (key) {\n            case 'min':\n              validatorsToAdd.push(Validators.min(value));\n              break;\n            case 'max':\n              validatorsToAdd.push(Validators.max(value));\n              break;\n            case 'required':\n              if (value) {\n                validatorsToAdd.push(Validators.required);\n              }\n              break;\n            default:\n              break;\n          }\n        }\n        this.myForm.addControl(control.name, this.fb.control(control.value, validatorsToAdd));\n      }\n    }\n  }\n  onSubmit() {\n    console.log('Form valid: ', this.myForm.valid);\n    console.log('Form values: ', this.myForm.value);\n  }\n}\nInputFormComponent.ɵfac = function InputFormComponent_Factory(t) {\n  return new (t || InputFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nInputFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: InputFormComponent,\n  selectors: [[\"app-input-form\"]],\n  inputs: {\n    jsonFormData: \"jsonFormData\",\n    answers: \"answers\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 5,\n  vars: 2,\n  consts: [[1, \"question-form-container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [4, \"ngFor\", \"ngForOf\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"btn\", \"btn-success\"], [1, \"choice-container\"], [1, \"name\"], [1, \"description\"], [\"required\", \"\", 3, \"type\", \"formControlName\", \"value\"], [1, \"alert\", \"alert-danger\", \"alert-dismissable\", \"fade\", \"in\"], [\"type\", \"button\", \"data-dismiss\", \"alert\", \"aria-label\", \"close\", 1, \"close\"], [\"aria-hidden\", \"true\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"class\", \"alert-1-warning\", 4, \"ngIf\"], [1, \"alert\", \"alert-danger\"], [1, \"alert-1-warning\"]],\n  template: function InputFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-card\", 0)(1, \"mat-card-content\")(2, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function InputFormComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵtemplate(4, InputFormComponent_label_4_Template, 4, 1, \"label\", 3);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.myForm);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.jsonFormData == null ? null : ctx.jsonFormData.types);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i3.MatButton, i4.MatCard, i4.MatCardContent, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\".demo-preview[_ngcontent-%COMP%] {\\n  padding-top: 20px;\\n  padding-bottom: 10px;\\n  width: 70%;\\n  margin: auto;\\n  text-align: center;\\n}\\n\\n.alert[_ngcontent-%COMP%] {\\n  padding: 0.7143rem 1.071rem;\\n  margin-bottom: 1.429rem;\\n  border-radius: 2px;\\n  border: 1px solid transparent;\\n  color: #FFF;\\n}\\n\\n.alert.alert-square[_ngcontent-%COMP%] {\\n  border-radius: 0;\\n}\\n\\n.alert[_ngcontent-%COMP%]   .close[_ngcontent-%COMP%] {\\n  position: relative;\\n}\\n\\n.alert.alert-dismissable[_ngcontent-%COMP%], .alert.alert-dismissible[_ngcontent-%COMP%] {\\n  padding-right: 2.5rem;\\n}\\n\\n.alert.alert-dismissable[_ngcontent-%COMP%]   .close[_ngcontent-%COMP%], .alert.alert-dismissible[_ngcontent-%COMP%]   .close[_ngcontent-%COMP%] {\\n  top: -2px;\\n  right: -20px;\\n  color: inherit;\\n}\\n\\n.alert.alert-primary[_ngcontent-%COMP%] {\\n  background-color: #2196F3;\\n  border-color: #2196F3;\\n}\\n\\n.alert.alert-secondary[_ngcontent-%COMP%] {\\n  background-color: #323a45;\\n  border-color: #323a45;\\n}\\n\\n.alert.alert-success[_ngcontent-%COMP%] {\\n  background-color: #64DD17;\\n  border-color: #64DD17;\\n}\\n\\n.alert.alert-info[_ngcontent-%COMP%] {\\n  background-color: #29B6F6;\\n  border-color: #29B6F6;\\n}\\n\\n.alert.alert-warning[_ngcontent-%COMP%] {\\n  background-color: #FFD600;\\n  border-color: #FFD600;\\n}\\n\\n.alert.alert-danger[_ngcontent-%COMP%] {\\n  background-color: #ef1c1c;\\n  border-color: #EF5350;\\n}\\n\\n.choice-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  gap: 5rem;\\n  margin-bottom: 2rem;\\n  box-shadow: rgb(35, 34, 34) 0px 8px 24px;\\n}\\n\\n.name[_ngcontent-%COMP%] {\\n  max-width: 11rem;\\n  color: antiquewhite;\\n  line-height: 2rem;\\n  padding: 1rem 1.5rem;\\n}\\n\\n.description[_ngcontent-%COMP%] {\\n  color: antiquewhite;\\n  text-align: center;\\n  line-height: 2rem;\\n  padding: 1rem;\\n}\\n\\nli[_ngcontent-%COMP%] {\\n  list-style: none;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvaW5wdXQtZm9ybS9pbnB1dC1mb3JtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsaUJBQUE7RUFDQSxvQkFBQTtFQUNBLFVBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7QUFDRjs7QUFFQTtFQUNFLDJCQUFBO0VBQ0EsdUJBQUE7RUFDQSxrQkFBQTtFQUNBLDZCQUFBO0VBQ0EsV0FBQTtBQUNGOztBQUVBO0VBQ0UsZ0JBQUE7QUFDRjs7QUFFQTtFQUNFLGtCQUFBO0FBQ0Y7O0FBRUE7O0VBRUUscUJBQUE7QUFDRjs7QUFFQTs7RUFFRSxTQUFBO0VBQ0EsWUFBQTtFQUNBLGNBQUE7QUFDRjs7QUFFQTtFQUNFLHlCQUFBO0VBQ0EscUJBQUE7QUFDRjs7QUFFQTtFQUNFLHlCQUFBO0VBQ0EscUJBQUE7QUFDRjs7QUFFQTtFQUNFLHlCQUFBO0VBQ0EscUJBQUE7QUFDRjs7QUFFQTtFQUNFLHlCQUFBO0VBQ0EscUJBQUE7QUFDRjs7QUFFQTtFQUNFLHlCQUFBO0VBQ0EscUJBQUE7QUFDRjs7QUFFQTtFQUNFLHlCQUFBO0VBQ0EscUJBQUE7QUFDRjs7QUFJQTtFQUNFLGFBQUE7RUFDSSxtQkFBQTtFQUNKLFNBQUE7RUFDQSxtQkFBQTtFQUNFLHdDQUFBO0FBREo7O0FBSUE7RUFDRSxnQkFBQTtFQUNBLG1CQUFBO0VBQ0EsaUJBQUE7RUFDQSxvQkFBQTtBQURGOztBQUtBO0VBQ0UsbUJBQUE7RUFDQSxrQkFBQTtFQUNBLGlCQUFBO0VBQ0EsYUFBQTtBQUZGOztBQUtBO0VBQ0ksZ0JBQUE7QUFGSiIsInNvdXJjZXNDb250ZW50IjpbIi5kZW1vLXByZXZpZXcge1xyXG4gIHBhZGRpbmctdG9wOiAyMHB4O1xyXG4gIHBhZGRpbmctYm90dG9tOiAxMHB4O1xyXG4gIHdpZHRoOiA3MCU7XHJcbiAgbWFyZ2luOiBhdXRvO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLmFsZXJ0IHtcclxuICBwYWRkaW5nOiAuNzE0M3JlbSAxLjA3MXJlbTtcclxuICBtYXJnaW4tYm90dG9tOiAxLjQyOXJlbTtcclxuICBib3JkZXItcmFkaXVzOiAycHg7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7XHJcbiAgY29sb3I6ICNGRkZcclxufVxyXG5cclxuLmFsZXJ0LmFsZXJ0LXNxdWFyZSB7XHJcbiAgYm9yZGVyLXJhZGl1czogMFxyXG59XHJcblxyXG4uYWxlcnQgLmNsb3NlIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmVcclxufVxyXG5cclxuLmFsZXJ0LmFsZXJ0LWRpc21pc3NhYmxlLFxyXG4uYWxlcnQuYWxlcnQtZGlzbWlzc2libGUge1xyXG4gIHBhZGRpbmctcmlnaHQ6IDIuNXJlbVxyXG59XHJcblxyXG4uYWxlcnQuYWxlcnQtZGlzbWlzc2FibGUgLmNsb3NlLFxyXG4uYWxlcnQuYWxlcnQtZGlzbWlzc2libGUgLmNsb3NlIHtcclxuICB0b3A6IC0ycHg7XHJcbiAgcmlnaHQ6IC0yMHB4O1xyXG4gIGNvbG9yOiBpbmhlcml0XHJcbn1cclxuXHJcbi5hbGVydC5hbGVydC1wcmltYXJ5IHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjE5NkYzO1xyXG4gIGJvcmRlci1jb2xvcjogIzIxOTZGM1xyXG59XHJcblxyXG4uYWxlcnQuYWxlcnQtc2Vjb25kYXJ5IHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzIzYTQ1O1xyXG4gIGJvcmRlci1jb2xvcjogIzMyM2E0NVxyXG59XHJcblxyXG4uYWxlcnQuYWxlcnQtc3VjY2VzcyB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzY0REQxNztcclxuICBib3JkZXItY29sb3I6ICM2NEREMTdcclxufVxyXG5cclxuLmFsZXJ0LmFsZXJ0LWluZm8ge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMyOUI2RjY7XHJcbiAgYm9yZGVyLWNvbG9yOiAjMjlCNkY2XHJcbn1cclxuXHJcbi5hbGVydC5hbGVydC13YXJuaW5nIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZENjAwO1xyXG4gIGJvcmRlci1jb2xvcjogI0ZGRDYwMFxyXG59XHJcblxyXG4uYWxlcnQuYWxlcnQtZGFuZ2VyIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWYxYzFjO1xyXG4gIGJvcmRlci1jb2xvcjogI0VGNTM1MFxyXG59XHJcblxyXG5cclxuXHJcbi5jaG9pY2UtY29udGFpbmVye1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgZ2FwOiA1cmVtO1xyXG4gIG1hcmdpbi1ib3R0b206IDJyZW07XHJcbiAgICBib3gtc2hhZG93OiByZ2IoMzUgMzQgMzQpIDBweCA4cHggMjRweDtcclxufVxyXG5cclxuLm5hbWV7XHJcbiAgbWF4LXdpZHRoOiAxMXJlbTtcclxuICBjb2xvcjogYW50aXF1ZXdoaXRlO1xyXG4gIGxpbmUtaGVpZ2h0OiAycmVtO1xyXG4gIHBhZGRpbmc6IDFyZW0gMS41cmVtO1xyXG59XHJcblxyXG5cclxuLmRlc2NyaXB0aW9ue1xyXG4gIGNvbG9yOiBhbnRpcXVld2hpdGU7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGxpbmUtaGVpZ2h0OiAycmVtO1xyXG4gIHBhZGRpbmc6IDFyZW07XHJcbn1cclxuXHJcbmxpIHtcclxuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"],\n  changeDetection: 0\n});","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;;ICenDC,+BAAsF;IACpFA,wCAAuB;IAAAA,yBAAiB;IAAAA,kBAC1C;IAAAA,iBAAM;;;;;IACNA,+BAAmF;IACjFA,wCAAuB;IAAAA,8BAAQ;IAAAA,YAA0B;IAAAA,iBAAS;IAAAA,kBACpE;IAAAA,iBAAM;;;;IAD2BA,eAA0B;IAA1BA,+CAA0B;;;;;IAbjEA,6BAA2C;IAGjBA,YAAkB;IAAAA,iBAAQ;IAC9CA,gCAA2B;IAAAA,YAAyB;IAAAA,iBAAQ;IAC5DA,2BAAgG;IAChGA,8BAA0D;IAEnCA,uBAAC;IAAAA,iBAAO;IAASA,+BAAQ;IAAAA,yBAAQ;IAAAA,iBAAS;IAACA,kEAAgD;IAAAA,iBAAM;IACxHA,sFAEM;IACNA,sFAEM;IACRA,iBAAO;;;;;IAZeA,eAAkB;IAAlBA,qCAAkB;IACXA,eAAyB;IAAzBA,4CAAyB;IAC7CA,eAAqB;IAArBA,sCAAqB;IAItBA,eAAmD;IAAnDA,8EAAmD;IAGnDA,eAAmD;IAAnDA,8EAAmD;;;;;IAbjEA,6BAAgD;IAC9CA,gFAkBQ;IACRA,iCAAgF;IAAAA,sBAAM;IAAAA,iBAAS;;;;IAnBpEA,eAAc;IAAdA,wCAAc;;;AD0BnD,OAAM,MAAOC,kBAAkB;EAQ7BC,YAAoBC,EAAe;IAAf,OAAE,GAAFA,EAAE;IAFf,WAAM,GAAc,IAAI,CAACA,EAAE,CAACC,KAAK,CAAC,EAAE,CAAC;EAEN;EACtCC,WAAW,CAACC,OAAsB;IAChC,IAAI,CAACC,UAAU,CAAC,IAAI,CAACC,YAAY,CAACC,KAAK,CAAC;EAC1C;EAEAF,UAAU,CAACE,KAAsB;IAC/B,KAAK,MAAMC,IAAI,IAAID,KAAK,EAAE;MACxB,KAAK,MAAME,OAAO,IAAID,IAAI,CAACE,MAAM,EAAE;QACjC,MAAMC,eAAe,GAAG,EAAE;QAC1B,KAAK,MAAM,CAACC,GAAG,EAAEC,KAAK,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACN,OAAO,CAACO,UAAU,CAAC,EAAE;UAC7D,QAAQJ,GAAG;YACT,KAAK,KAAK;cACRD,eAAe,CAACM,IAAI,CAACpB,UAAU,CAACqB,GAAG,CAACL,KAAK,CAAC,CAAC;cAC3C;YACF,KAAK,KAAK;cACRF,eAAe,CAACM,IAAI,CAACpB,UAAU,CAACsB,GAAG,CAACN,KAAK,CAAC,CAAC;cAC3C;YACF,KAAK,UAAU;cACb,IAAIA,KAAK,EAAE;gBACTF,eAAe,CAACM,IAAI,CAACpB,UAAU,CAACuB,QAAQ,CAAC;;cAE3C;YACF;cACE;UAAM;;QAIZ,IAAI,CAACC,MAAM,CAACC,UAAU,CACpBb,OAAO,CAACc,IAAI,EACZ,IAAI,CAACtB,EAAE,CAACQ,OAAO,CAACA,OAAO,CAACI,KAAK,EAAEF,eAAe,CAAC,CAChD;;;EAGP;EAEAa,QAAQ;IACNC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE,IAAI,CAACL,MAAM,CAACM,KAAK,CAAC;IAC9CF,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,IAAI,CAACL,MAAM,CAACR,KAAK,CAAC;EACjD;;;mBA9CWd,kBAAkB;AAAA;;QAAlBA,kBAAkB;EAAA6B;EAAAC;IAAAvB;IAAAwB;EAAA;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MC/B/BrC,mCAA0C;MAEXA;QAAA,OAAYsC,cAAU;MAAA,EAAC;MAChDtC,8BAAwB;MACtBA,uEAqBQ;MACVA,iBAAM;;;MAxBFA,eAAoB;MAApBA,sCAAoB;MAEEA,eAAsB;MAAtBA,kFAAsB","names":["Validators","i0","InputFormComponent","constructor","fb","group","ngOnChanges","changes","createForm","jsonFormData","types","type","control","values","validatorsToAdd","key","value","Object","entries","validators","push","min","max","required","myForm","addControl","name","onSubmit","console","log","valid","selectors","inputs","answers","features","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\projects\\hajar\\hajar\\src\\app\\input-form\\input-form.component.ts","D:\\projects\\hajar\\hajar\\src\\app\\input-form\\input-form.component.html"],"sourcesContent":["import { Component, Input, OnChanges, SimpleChanges, ChangeDetectionStrategy } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n\ninterface JsonFormValidators {\n  min?: number;\n  max?: number;\n  required?: boolean;\n}\n\n\ninterface JsonFormControls {\n  name: string;\n  description: string;\n  value: string;\n  type: string;\n  validators: JsonFormValidators;\n}\n\ninterface JsonFormTypes {\n  name: string;\n  values: JsonFormControls[];\n}\nexport interface JsonFormData {\n  types: JsonFormTypes[];\n}\n\n@Component({\n  selector: 'app-input-form',\n  templateUrl: './input-form.component.html',\n  styleUrls: ['./input-form.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class InputFormComponent implements OnChanges {\n  @Input()\n  jsonFormData!: JsonFormData;\n\n  @Input() answers: any;\n\n  public myForm: FormGroup = this.fb.group({});\n\n  constructor(private fb: FormBuilder) {}\n  ngOnChanges(changes: SimpleChanges) {\n    this.createForm(this.jsonFormData.types);\n  }\n\n  createForm(types: JsonFormTypes[]) {\n    for (const type of types) {\n      for (const control of type.values) {\n        const validatorsToAdd = [];\n        for (const [key, value] of Object.entries(control.validators)) {\n          switch (key) {\n            case 'min':\n              validatorsToAdd.push(Validators.min(value));\n              break;\n            case 'max':\n              validatorsToAdd.push(Validators.max(value));\n              break;\n            case 'required':\n              if (value) {\n                validatorsToAdd.push(Validators.required);\n              }\n              break;\n            default:\n              break;\n          }\n        }\n  \n        this.myForm.addControl(\n          control.name,\n          this.fb.control(control.value, validatorsToAdd)\n        );\n      }\n    }\n  }\n\n  onSubmit() {\n    console.log('Form valid: ', this.myForm.valid);\n    console.log('Form values: ', this.myForm.value);\n  }\n}\n","\n\n<mat-card class=\"question-form-container\">\n  <mat-card-content>\n    <form [formGroup]=\"myForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"form-group\">\n        <label *ngFor=\"let type of jsonFormData?.types\">\n          <label *ngFor=\"let control of type.values\">\n            <li>\n              <span class=\"choice-container\">\n                <label class=\"name\">{{ control.name }}</label>\n                <label class=\"description\">{{ control.description }}</label>\n                <input [type]=\"control.type\" [formControlName]=\"control.name\" [value]=\"control.value\" required >\n                <div class=\"alert alert-danger alert-dismissable fade in\">\n                <button type=\"button\" data-dismiss=\"alert\" aria-label=\"close\" class=\"close\"><span\n                    aria-hidden=\"true\">×</span></button><strong>Oh snap!</strong> Change a few things up and try submitting again.</div>\n                <div *ngIf=\"myForm.controls[control.name].hasError('max')\" class=\"alert alert-danger\">\n                  Max required number is <strong></strong>.\n                </div>\n                <div *ngIf=\"myForm.controls[control.name].hasError('min')\" class=\"alert-1-warning\">\n                  Min required number is <strong>{{control.validators.min}}</strong>.\n                </div>\n              </span>\n\n            </li>\n          </label>\n          <button mat-raised-button class=\"btn btn-success\" color=\"primary\" type=\"submit\">Submit</button>\n        </label>\n      </div>\n    </form>\n\n  </mat-card-content>\n\n\n</mat-card>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}