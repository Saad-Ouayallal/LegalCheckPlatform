{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class InputFormComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.myForm = this.fb.group({});\n  }\n  ngOnChanges(changes) {\n    if (!changes.jsonFormData.firstChange) {\n      console.log(this.jsonFormData);\n    }\n  }\n  createForm(types) {\n    for (const type of types) {\n      this.myForm.addControl(type.name, this.fb.control(control.value, validatorsToAdd));\n    }\n  }\n}\nInputFormComponent.ɵfac = function InputFormComponent_Factory(t) {\n  return new (t || InputFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nInputFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: InputFormComponent,\n  selectors: [[\"app-input-form\"]],\n  inputs: {\n    jsonFormData: \"jsonFormData\",\n    answers: \"answers\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 0,\n  template: function InputFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"input-form works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"],\n  changeDetection: 0\n});","map":{"version":3,"mappings":";;AAiCA,OAAM,MAAOA,kBAAkB;EAS7BC,YAAoBC,EAAe;IAAf,OAAE,GAAFA,EAAE;IAFf,WAAM,GAAc,IAAI,CAACA,EAAE,CAACC,KAAK,CAAC,EAAE,CAAC;EAEN;EACtCC,WAAW,CAACC,OAAsB;IAChC,IAAI,CAACA,OAAO,CAACC,YAAY,CAACC,WAAW,EAAE;MACrCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,YAAY,CAAC;;EAElC;EAEAI,UAAU,CAACC,KAAsB;IAC/B,KAAK,MAAMC,IAAI,IAAID,KAAK,EAAE;MACxB,IAAI,CAACE,MAAM,CAACC,UAAU,CACpBF,IAAI,CAACG,IAAI,EACT,IAAI,CAACb,EAAE,CAACc,OAAO,CAACA,OAAO,CAACC,KAAK,EAAEC,eAAe,CAAC,CAChD;;EAEL;;;mBAvBWlB,kBAAkB;AAAA;;QAAlBA,kBAAkB;EAAAmB;EAAAC;IAAAd;IAAAe;EAAA;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCjC/BC,yBAAG;MAAAA,iCAAiB;MAAAA,iBAAI","names":["InputFormComponent","constructor","fb","group","ngOnChanges","changes","jsonFormData","firstChange","console","log","createForm","types","type","myForm","addControl","name","control","value","validatorsToAdd","selectors","inputs","answers","features","decls","vars","template","i0"],"sourceRoot":"","sources":["D:\\projects\\hajar\\hajar\\src\\app\\input-form\\input-form.component.ts","D:\\projects\\hajar\\hajar\\src\\app\\input-form\\input-form.component.html"],"sourcesContent":["import { Component, Input, OnChanges, SimpleChanges, ChangeDetectionStrategy } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n\ninterface JsonFormValidators {\n  min?: number;\n  max?: number;\n  required?: boolean;\n}\n\n\ninterface JsonFormControls {\n  name: string;\n  description: string;\n  value: string;\n  type: string;\n  validators: JsonFormValidators;\n}\n\ninterface JsonFormTypes {\n  name: string;\n  values: JsonFormControls[];\n}\nexport interface JsonFormData {\n  types: JsonFormTypes[];\n}\n\n@Component({\n  selector: 'app-input-form',\n  templateUrl: './input-form.component.html',\n  styleUrls: ['./input-form.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class InputFormComponent implements OnChanges {\n  @Input()\n  jsonFormData!: JsonFormData;\n\n\n  @Input answers : any\n\n  public myForm: FormGroup = this.fb.group({});\n\n  constructor(private fb: FormBuilder) {}\n  ngOnChanges(changes: SimpleChanges) {\n    if (!changes.jsonFormData.firstChange) {\n      console.log(this.jsonFormData);\n    }\n  }\n\n  createForm(types: JsonFormTypes[]) {\n    for (const type of types) {\n      this.myForm.addControl(\n        type.name,\n        this.fb.control(control.value, validatorsToAdd)\n      );\n    }\n  }\n}\n","<p>input-form works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}