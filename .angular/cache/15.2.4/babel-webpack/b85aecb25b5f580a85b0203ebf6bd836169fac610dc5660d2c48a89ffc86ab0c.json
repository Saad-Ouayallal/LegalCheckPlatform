{"ast":null,"code":"import { Answers } from '../quiz.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../questions.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/card\";\nfunction CardSelectionComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 3);\n  }\n}\nfunction CardSelectionComponent_div_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"app-question-form\", 8);\n    i0.ɵɵlistener(\"onChoiceMade\", function CardSelectionComponent_div_2_div_1_Template_app_question_form_onChoiceMade_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.updateChoice($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"mat-card-actions\", 9)(3, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function CardSelectionComponent_div_2_div_1_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.nextOrViewResults());\n    });\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"question\", ctx_r2.questions[ctx_r2.currentQuestionIndex]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !ctx_r2.answers.values[ctx_r2.currentQuestionIndex]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.currentQuestionIndex === ctx_r2.questions.length - 1 ? \"View results\" : \"Next\", \" \");\n  }\n}\nfunction CardSelectionComponent_div_2_app_results_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-results\", 11);\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"answers\", ctx_r3.answers)(\"questions\", ctx_r3.questions);\n  }\n}\nfunction CardSelectionComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtemplate(1, CardSelectionComponent_div_2_div_1_Template, 5, 3, \"div\", 5);\n    i0.ɵɵtemplate(2, CardSelectionComponent_div_2_app_results_2_Template, 1, 2, \"app-results\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.showResults);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.showResults);\n  }\n}\nexport class CardSelectionComponent {\n  // inject both the active route and the questions service\n  constructor(route, questionsService) {\n    this.route = route;\n    this.questionsService = questionsService;\n    this.showResults = false;\n  }\n  ngOnInit() {\n    //read from the dynamic route and load the proper quiz data\n    this.questionsService.getQuestions(this.route.snapshot.params['quizId']).subscribe(questions => {\n      this.questions = questions;\n      this.answers = new Answers();\n      this.currentQuestionIndex = 0;\n    });\n  }\n  updateChoice(choice) {\n    this.answers.values[this.currentQuestionIndex] = choice;\n  }\n  nextOrViewResults() {\n    if (this.currentQuestionIndex === this.questions.length - 1) {\n      this.showResults = true;\n      return;\n    }\n    this.currentQuestionIndex++;\n  }\n}\nCardSelectionComponent.ɵfac = function CardSelectionComponent_Factory(t) {\n  return new (t || CardSelectionComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.QuestionsService));\n};\nCardSelectionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CardSelectionComponent,\n  selectors: [[\"app-card-selection\"]],\n  decls: 3,\n  vars: 2,\n  consts: [[1, \"question-container\"], [\"class\", \"spinner-grow text primary\", 4, \"ngIf\"], [\"class\", \"quiz\", 4, \"ngIf\"], [1, \"spinner-grow\", \"text\", \"primary\"], [1, \"quiz\"], [\"class\", \"questions\", 4, \"ngIf\"], [3, \"answers\", \"questions\", 4, \"ngIf\"], [1, \"questions\"], [3, \"question\", \"onChoiceMade\"], [\"align\", \"center\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 1, \"btn\", \"btn-success\", 3, \"disabled\", \"click\"], [3, \"answers\", \"questions\"]],\n  template: function CardSelectionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-card\", 0);\n      i0.ɵɵtemplate(1, CardSelectionComponent_div_1_Template, 1, 0, \"div\", 1);\n      i0.ɵɵtemplate(2, CardSelectionComponent_div_2_Template, 3, 2, \"div\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.quiz && !ctx.questions);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.questions);\n    }\n  },\n  dependencies: [i3.NgIf, i4.MatButton, i5.MatCard, i5.MatCardActions],\n  styles: [\".main-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  flex-direction: column;\\n  align-items: center;\\n  height: 100%;\\n  width: 100%;\\n}\\n\\n.container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  gap: 5rem;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n.main-card[_ngcontent-%COMP%] {\\n  max-width: 20%;\\n  background: white;\\n  transition: transform 0.5s ease;\\n}\\n.main-card[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%] {\\n  text-align: center;\\n  text-transform: uppercase;\\n}\\n\\n.main-card[_ngcontent-%COMP%]:hover {\\n  transform: scale(1.1);\\n}\\n\\n.active[_ngcontent-%COMP%] {\\n  border: 5px solid rgb(0, 153, 255);\\n}\\n\\n.button-next[_ngcontent-%COMP%] {\\n  margin-top: 5rem;\\n  font-size: large;\\n  padding: 0 2rem;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY2FyZC1zZWxlY3Rpb24vY2FyZC1zZWxlY3Rpb24uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxzQkFBQTtFQUNBLG1CQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7QUFDRjs7QUFFQTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtFQUNBLFNBQUE7RUFDQSxtQkFBQTtFQUNBLHVCQUFBO0FBQ0Y7O0FBR0E7RUFDRSxjQUFBO0VBQ0EsaUJBQUE7RUFDQSwrQkFBQTtBQUFGO0FBRUU7RUFDRSxrQkFBQTtFQUNBLHlCQUFBO0FBQUo7O0FBSUE7RUFDRSxxQkFBQTtBQURGOztBQUlBO0VBQ0Usa0NBQUE7QUFERjs7QUFJQTtFQUNFLGdCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxlQUFBO0FBREYiLCJzb3VyY2VzQ29udGVudCI6WyIubWFpbi1jb250YWluZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGhlaWdodDogMTAwJTtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLmNvbnRhaW5lcntcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgZ2FwOiA1cmVtO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblxyXG59XHJcblxyXG4ubWFpbi1jYXJkIHtcclxuICBtYXgtd2lkdGg6IDIwJTtcclxuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcclxuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gLjVzIGVhc2U7XHJcblxyXG4gIC50aXRsZSB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gIH1cclxufVxyXG5cclxuLm1haW4tY2FyZDpob3ZlciB7XHJcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjEpO1xyXG59XHJcblxyXG4uYWN0aXZlIHtcclxuICBib3JkZXI6IDVweCBzb2xpZCByZ2IoMCwgMTUzLCAyNTUpO1xyXG59XHJcblxyXG4uYnV0dG9uLW5leHQge1xyXG4gIG1hcmdpbi10b3A6IDVyZW07XHJcbiAgZm9udC1zaXplOiBsYXJnZTtcclxuICBwYWRkaW5nOiAwIDJyZW07XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAIA,SAAeA,OAAO,QAA0B,eAAe;;;;;;;;;ICqB7DC,yBACM;;;;;;IAEJA,8BAA4C;IACsBA;MAAAA;MAAA;MAAA,OAAgBA,0CAAoB;IAAA,EAAC;IACrGA,iBAAoB;IACpBA,2CAAiC;IACmCA;MAAAA;MAAA;MAAA,OAASA,yCAAmB;IAAA,EAAC;IAE7FA,YACF;IAAAA,iBAAS;;;;IANQA,eAA4C;IAA5CA,wEAA4C;IAI3DA,eAAkD;IAAlDA,8EAAkD;IAClDA,eACF;IADEA,sHACF;;;;;IAIJA,kCAA2F;;;;IAA1DA,wCAAmB;;;;;IAZtDA,8BAAoC;IAClCA,6EAUM;IACNA,6FAA2F;IAC7FA,iBAAM;;;;IAZEA,eAAkB;IAAlBA,0CAAkB;IAWVA,eAAiB;IAAjBA,yCAAiB;;;AD1BnC,OAAM,MAAOC,sBAAsB;EAkCjC;EACAC,YACUC,KAAqB,EACrBC,gBAAkC;IADlC,UAAK,GAALD,KAAK;IACL,qBAAgB,GAAhBC,gBAAgB;IAJ1B,gBAAW,GAAG,KAAK;EAKhB;EAEHC,QAAQ;IACN;IACA,IAAI,CAACD,gBAAgB,CAClBE,YAAY,CAAC,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAClDC,SAAS,CAAEC,SAAS,IAAI;MACvB,IAAI,CAACA,SAAS,GAAGA,SAAS;MAC1B,IAAI,CAACC,OAAO,GAAG,IAAIZ,OAAO,EAAE;MAC5B,IAAI,CAACa,oBAAoB,GAAG,CAAC;IAC/B,CAAC,CAAC;EACN;EAEAC,YAAY,CAACC,MAAc;IACzB,IAAI,CAACH,OAAO,CAACI,MAAM,CAAC,IAAI,CAACH,oBAAoB,CAAC,GAAGE,MAAM;EACzD;EAEAE,iBAAiB;IACf,IAAI,IAAI,CAACJ,oBAAoB,KAAK,IAAI,CAACF,SAAS,CAACO,MAAM,GAAG,CAAC,EAAE;MAC3D,IAAI,CAACC,WAAW,GAAG,IAAI;MACvB;;IAEF,IAAI,CAACN,oBAAoB,EAAE;EAC7B;;;mBA7DWX,sBAAsB;AAAA;;QAAtBA,sBAAsB;EAAAkB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCWnCvB,mCAAqC;MACnCA,uEACM;MACNA,uEAaM;MAERA,iBAAW;;;MAjBHA,eAAwB;MAAxBA,iDAAwB;MAExBA,eAAe;MAAfA,oCAAe","names":["Answers","i0","CardSelectionComponent","constructor","route","questionsService","ngOnInit","getQuestions","snapshot","params","subscribe","questions","answers","currentQuestionIndex","updateChoice","choice","values","nextOrViewResults","length","showResults","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\projects\\hajar\\hajar\\src\\app\\card-selection\\card-selection.component.ts","D:\\projects\\hajar\\hajar\\src\\app\\card-selection\\card-selection.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { switchMap } from 'rxjs/operators';\nimport { QuestionsService } from '../questions.service';\nimport { Quiz, Answers, Choice, Question } from '../quiz.model';\n\n\n\n@Component({\n  selector: 'app-card-selection',\n  templateUrl: './card-selection.component.html',\n  styleUrls: ['./card-selection.component.scss'],\n})\nexport class CardSelectionComponent implements OnInit {\n  // constructor() {}\n  // public cardOptions: CardOption[] = [\n  //   { value: 'front seat', image: '../../assets/images/front-seat.png' },\n  //   { value: 'back seat', image: '../../assets/images/rear-seat.png' },\n  // ];\n  // // public selectedCards: string[] = [];\n  // // public selectedItem: any = {};\n\n  // // ngOnInit() {\n  // //   console.log(this.selectedCards);\n  // // }\n\n  // // setItem(item: any) {\n  // //   this.selectedItem = item;\n  // // }\n\n  // // goToNextPage() {\n  // //   // this.selectedCards.push(item);\n  // // }\n  // selectedOption: string = '';\n  // selectedAnswer: string[] = [];\n\n  // goToNextPage() {\n  //   this.selectedAnswer.push(this.selectedOption);\n  //   // Navigate to the second page\n  // }\n\n  quiz!: Quiz;\n  answers!: Answers;\n  questions!: Question[];\n  currentQuestionIndex!: number;\n\n  showResults = false;\n  // inject both the active route and the questions service\n  constructor(\n    private route: ActivatedRoute,\n    private questionsService: QuestionsService\n  ) {}\n\n  ngOnInit() {\n    //read from the dynamic route and load the proper quiz data\n    this.questionsService\n      .getQuestions(this.route.snapshot.params['quizId'])\n      .subscribe((questions) => {\n        this.questions = questions;\n        this.answers = new Answers();\n        this.currentQuestionIndex = 0;\n      });\n  }\n\n  updateChoice(choice: Choice) {\n    this.answers.values[this.currentQuestionIndex] = choice;\n  }\n\n  nextOrViewResults() {\n    if (this.currentQuestionIndex === this.questions.length - 1) {\n      this.showResults = true;\n      return;\n    }\n    this.currentQuestionIndex++;\n  }\n\n}\n","<!-- <div class=\"main-container\">\n  <div class=\"container\">\n    <mat-card *ngFor=\"let cardOption of cardOptions\" (click)=\"setItem(cardOption)\" class=\"main-card\"\n      [ngClass]=\"{'active' : (selectedItem.value === cardOption.value)}\">\n      <mat-card-header>\n        <mat-card-title class=\"title\">{{cardOption.value}}</mat-card-title>\n      </mat-card-header>\n      <img mat-card-image src={{cardOption.image}} alt=\"\">\n    </mat-card>\n  </div>\n  <button mat-fab extended color=\"accent\"  class=\"button-next\" [disabled]=\"!selectedItem.value\" (click)=\"goToNextPage()\">Next</button>\n</div> -->\n\n<!-- <mat-card >\n  <mat-radio-group [(ngModel)]=\"selectedOption\" *ngFor=\"let cardOption of cardOptions\">\n    <mat-card>\n      <mat-radio-button value=\"option1\">{{cardOption.value}}</mat-radio-button>\n      <img mat-card-lg-image src={{cardOption.image}} alt=\"\">\n    </mat-card>\n  </mat-radio-group>\n  <button mat-raised-button color=\"primary\" (click)=\"goToNextPage()\">Next</button>\n</mat-card> -->\n\n\n<mat-card class=\"question-container\">\n  <div *ngIf=\"quiz && !questions\" class=\"spinner-grow text primary\">\n  </div>\n  <div *ngIf=\"questions\" class=\"quiz\">\n    <div *ngIf=\"!showResults\" class=\"questions\">\n      <app-question-form [question]=\"questions[currentQuestionIndex]\" (onChoiceMade)=\"updateChoice($event)\">\n      </app-question-form>\n      <mat-card-actions align=\"center\">\n        <button mat-raised-button class=\"btn btn-success\" color=\"primary\" (click)=\"nextOrViewResults()\"\n          [disabled]=\"!answers.values[currentQuestionIndex]\">\n          {{currentQuestionIndex === questions.length -1 ? 'View results' : 'Next'}}\n        </button>\n      </mat-card-actions>\n\n    </div>\n    <app-results *ngIf=\"showResults\" [answers]=\"answers\" [questions]=\"questions\"></app-results>\n  </div>\n\n</mat-card>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}